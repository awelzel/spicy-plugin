# Copyright (c) 2020-2021 by the Zeek Project. See LICENSE for details.

module zeek;

# Note: Retain the formatting here, doc/scripts/autogen-spicy-lib is picking up on that.

%cxx-include = "zeek-spicy/runtime-support.h";

## Triggers a DPD protocol confirmation for the current connection.
public function confirm_protocol() : void &cxxname="spicy::zeek::rt::confirm_protocol";

## Triggers a DPD protocol violation for the current connection.
public function reject_protocol(reason: string) : void &cxxname="spicy::zeek::rt::reject_protocol";

## Returns true if we're currently parsing the originator side of a connection.
public function is_orig() : bool &cxxname="spicy::zeek::rt::is_orig";

## Returns the current connection's UID.
public function uid() : string &cxxname="spicy::zeek::rt::uid";

## Instructs Zeek to flip the directionality of the current connection.
public function flip_roles() : void &cxxname="spicy::zeek::rt::flip_roles";

## Returns the number of packets seen so far on the current side of the current connection.
public function number_packets() : uint64 &cxxname="spicy::zeek::rt::number_packets";

## Signals the beginning of a file to Zeek's file analysis, associating it with the current connection.
## Optionally, a mime type can be provided. It will be passed on to Zeek's file analysis framework.
## Returns the Zeek-side file ID of the new file.
public function file_begin(mime_type: optional<string> = Null) : string &cxxname="spicy::zeek::rt::file_begin";

## Returns the current file's FUID.
public function fuid() : string &cxxname="spicy::zeek::rt::fuid";

## Signals the expected size of a file to Zeek's file analysis.
public function file_set_size(size: uint64) : void &cxxname="spicy::zeek::rt::file_set_size";

## Passes file content on to Zeek's file analysis.
public function file_data_in(data: bytes) : void &cxxname="spicy::zeek::rt::file_data_in";

## Passes file content at a specific offset on to Zeek's file analysis.
public function file_data_in_at_offset(data: bytes, offset: uint64) : void &cxxname="spicy::zeek::rt::data_in_at_offset";

## Signals a gap in a file to Zeek's file analysis.
public function file_gap(offset: uint64, len: uint64) : void &cxxname="spicy::zeek::rt::file_gap";

## Signals the end of a file to Zeek's file analysis.
public function file_end() : void &cxxname="spicy::zeek::rt::file_end";

## Inside a packet analyzer, forwards what data remains after parsing the top-level unit
## on to another analyzer. The index specifies the target, per the current dispatcher table.
public function forward_packet(identifier: uint32) : void &cxxname="spicy::zeek::rt::forward_packet";
