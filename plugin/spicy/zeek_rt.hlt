
module zeek_rt {

%cxx-include = "zeek-spicy/runtime-support.h";

public type Val = __library_type("::zeek::ValPtr");
public type BroType = __library_type("::zeek::TypePtr");
public type EventHandlerPtr = __library_type("::zeek::EventHandlerPtr");

declare public void register_protocol_analyzer(string name, hilti::Protocol protocol, vector<port> ports, string parser_orig, string parser_resp, string replaces) &cxxname="spicy::zeek::rt::register_protocol_analyzer";
declare public void register_file_analyzer(string name, vector<string> mime_types, string parser, string replaces) &cxxname="spicy::zeek::rt::register_file_analyzer";
declare public void register_packet_analyzer(string name, string parser) &cxxname="spicy::zeek::rt::register_packet_analyzer";
declare public void register_enum_type(string ns, string id, vector<tuple<string, int<64>>> labels) &cxxname="spicy::zeek::rt::register_enum_type";

declare public bool have_handler(EventHandlerPtr handler) &cxxname="spicy::zeek::rt::have_handler";
declare public EventHandlerPtr internal_handler(string event) &cxxname="spicy::zeek::rt::internal_handler";

declare public void raise_event(EventHandlerPtr handler, vector<Val> args, string location) &cxxname="spicy::zeek::rt::raise_event";
declare public BroType event_arg_type(EventHandlerPtr handler, uint<64> idx, string location) &cxxname="spicy::zeek::rt::event_arg_type";
declare public Val to_val(any x, BroType target, string location) &cxxname="spicy::zeek::rt::to_val" &have_prototype;

declare public Val current_conn(string location) &cxxname="spicy::zeek::rt::current_conn";
declare public Val current_file(string location) &cxxname="spicy::zeek::rt::current_file";
declare public Val current_is_orig(string location) &cxxname="spicy::zeek::rt::current_is_orig";

declare public void debug(string msg) &cxxname="spicy::zeek::rt::debug";

}
